// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Usuario {
  id                       Int       @id @default(autoincrement())
  name                     String
  sobrenome                String
  email                    String    @unique
  cpf                      String    @unique
  telefone                 String
  atuacao                  String?
  empresa                  String?
  faculdade                String?
  password                 String
  resetPasswordRequestedAt DateTime?
  createdAt                DateTime  @default(now())
  updatedAt                DateTime  @updatedAt
  passwordResetToken       String?   @unique
  passwordResetExpires     DateTime?
  tickets                  Ticket[] // Campo de relação para os tickets do usuário
}

model Admin {
  id                       Int       @id @default(autoincrement())
  name                     String
  sobrenome                String
  email                    String    @unique
  cpf                      String    @unique
  telefone                 String
  atuacao                  String?
  empresa                  String?
  faculdade                String?
  password                 String
  createdAt                DateTime  @default(now())
  updatedAt                DateTime  @updatedAt
  events                   Event[]
  passwordResetToken       String?   @unique
  passwordResetExpires     DateTime?
  resetPasswordRequestedAt DateTime?
}

model Event {
  id             Int         @id @default(autoincrement())
  name           String
  description    String
  eventDate      DateTime
  ticketDeadline DateTime
  ticketPrice    Float
  status         EventStatus @default(ACTIVE)
  street         String
  number         Int
  complement     String?
  neighborhood   String
  city           String
  state          String
  cep            String
  maxTickets     Int
  ticketsSold    Int         @default(0)
  createdAt      DateTime    @default(now())
  updatedAt      DateTime    @updatedAt

  adminId Int
  admin   Admin    @relation(fields: [adminId], references: [id])
  tickets Ticket[]
}

enum EventStatus {
  ACTIVE
  CLOSED
}

model Ticket {
  id           String    @id @default(uuid())
  qrCodeString String    @unique
  isValid      Boolean   @default(true)
  checkInDate  DateTime?
  createdAt    DateTime  @default(now())
  updatedAt    DateTime  @updatedAt

  eventId Int
  event   Event @relation(fields: [eventId], references: [id], onDelete: Cascade)

  userId  Int?
  usuario Usuario? @relation(fields: [userId], references: [id], onDelete: SetNull)
}
